
## 显示Sql
#hibernate.show_sql=true
## 自动扫描的包前缀
#entitymanager.packagesToScan= com.ule.fenxiao
## 数据库连接
spring.datasource.url=jdbc:mysql://localhost:3306/post_item?\
  useUnicode=true&characterEncoding=utf-8&useSSL=true&autoReconnect=true
## 用户名
spring.datasource.username=root
## 密码
spring.datasource.password=123456
## 数据库驱动
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# 建表方式
#spring.jpa.properties.hibernate.hbm2ddl.auto=update
# 方言
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect


# 下面为连接池的补充设置，应用到上面所有数据源中# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
